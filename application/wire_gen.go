// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package application

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"github.com/podossaem/root/application/api"
	"github.com/podossaem/root/application/config"
	"github.com/podossaem/root/domain/verification"
	"github.com/podossaem/root/domain/verification/app"
	"github.com/podossaem/root/domain/verification/persist"
)

// Injectors from app.go:

func Start() error {
	emailVerificationRepository := persist.NewEmailVerificationRepository()
	emailVerificationService := verification.NewEmailVerificationService(emailVerificationRepository)
	emailVerificationController := app.NewEmailVerificationController(emailVerificationService)
	router := app.NewRouter(emailVerificationController)
	apiRouter := api.NewRouter(router)
	error2 := StartApplication(apiRouter)
	return error2
}

// app.go:

func StartApplication(
	router api.Router,
) error {
	app2 := echo.New()
	app2.
		Use(middleware.Logger())
	router.Attach(app2)

	return app2.Start(fmt.Sprintf(":%d", config.AppPort()))
}
